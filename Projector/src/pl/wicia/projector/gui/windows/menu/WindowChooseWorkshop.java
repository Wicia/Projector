/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pl.wicia.projector.gui.windows.menu;

import java.awt.EventQueue;
import java.util.Enumeration;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import org.springframework.context.ApplicationContext;
import pl.wicia.projector.database.entities.workshop.WorkshopEntity;
import pl.wicia.projector.database.services.workshop.WorkshopService;
import pl.wicia.projector.gui.utils.dialogs.types.DialogError;
import pl.wicia.projector.gui.utils.dialogs.types.DialogQuestion;
import pl.wicia.projector.gui.utils.dialogs.UtilsDialogs;
import pl.wicia.projector.spring.contexts.ContextMain;
import pl.wicia.projector.spring.contexts.ContextSettings;
import pl.wicia.projector.common.settings.AppSettings;
import pl.wicia.projector.common.settings.AppSettings.PropertyName;

/**
 *
 * @author Michał 'Wicia' Wietecha
 */
public class WindowChooseWorkshop extends javax.swing.JFrame {

    /**
     * Creates new form WindowAddWorkshop
     */
    public WindowChooseWorkshop() {
        this.initComponents();
        this.initDialogs();
        this.onTableLoad();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableWorkshops = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 102, 0));

        tableWorkshops.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "ID", "Nazwa",
            }
        ));
        tableWorkshops.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableWorkshopsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableWorkshops);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initDialogs(){
        this.dialogs = new UtilsDialogs(this);
    }
    
    private void tableWorkshopsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableWorkshopsMouseClicked
        int selectedRow = this.tableWorkshops.getSelectedRow();
        String workshopName = this.tableWorkshops.getValueAt(selectedRow, 1).toString();
        long workshopID = Long.valueOf(this.tableWorkshops.getValueAt(selectedRow, 0).toString());
        int decision = dialogs.show(new DialogQuestion("Pytanie", 
                "Czy chcesz wybrać warsztat " + workshopName + "?", "Tak", "Anuluj"));
        if(decision == 0){
            AppSettings s = ContextSettings.getAppSettings();
            s.addProperty(PropertyName.WorkshopName, workshopName);
            s.addProperty(PropertyName.WorkshopID, workshopID);
            WindowMenu.open();
            this.dispose();
        }
    }//GEN-LAST:event_tableWorkshopsMouseClicked
        
    private void onTableLoad(){
        // Init column width
        int tableWidth = this.tableWorkshops.getWidth();
        Enumeration<TableColumn> columns = this.tableWorkshops.getColumnModel().getColumns();
        while (columns.hasMoreElements()) {
            TableColumn nextElement = columns.nextElement();
            String colName = nextElement.getHeaderValue().toString();
            if(colName.equals("ID")){
                nextElement.setPreferredWidth((tableWidth * 20)/100);
            }
            if(colName.equals("Nazwa")){
                nextElement.setPreferredWidth((tableWidth * 80)/100);
            }
        }
        
        // Getting data
        try {
            // TODO Gdzie to ma być inicjalizowane i zapisywane?
            WorkshopService bean = WorkshopService.getService();
            List<WorkshopEntity> allWorkshops = bean.getAllWorkshops();
            this.fillTable(allWorkshops);
        } 
        catch(Exception ex){
            dialogs.show(new DialogError("Błąd!", ex.getMessage()));
        }
    }
    
    private void fillTable(List<WorkshopEntity> allWorkshops){
        DefaultTableModel model = (DefaultTableModel)this.tableWorkshops.getModel();
        model.setRowCount(0);
        model.setRowCount(allWorkshops.size());
        
        // Setting rows height
        for(int i = 0 ; i < this.tableWorkshops.getRowCount() ; i++){
            this.tableWorkshops.setRowHeight(i, 30);
        }
        
        for(int i = 0 ; i < allWorkshops.size() ; i++){
            WorkshopEntity entity = allWorkshops.get(i);
            this.tableWorkshops.setValueAt(entity.getId(), i, 0);
            this.tableWorkshops.setValueAt(entity.getName(), i, 1);
        }
    }
    
    //TODO: Jak to profesjonalnie zorganizować + refactroring innych metod tego typu
    public static void open(){
        EventQueue.invokeLater(() -> {
            WindowChooseWorkshop window = new WindowChooseWorkshop();
            window.setVisible(true);
            window.setLocationRelativeTo(null);
        });
    }
    
    private UtilsDialogs dialogs;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableWorkshops;
    // End of variables declaration//GEN-END:variables
}