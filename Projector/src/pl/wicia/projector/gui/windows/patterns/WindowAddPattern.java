/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pl.wicia.projector.gui.windows.patterns;

import java.awt.EventQueue;
import pl.wicia.projector.database.entities.patterns.element.ElementPatternEntity;
import pl.wicia.projector.database.services.patterns.element.ElementPatternService;
import pl.wicia.projector.gui.utils.dialogs.types.DialogError;
import pl.wicia.projector.gui.utils.dialogs.types.DialogInfo;
import pl.wicia.projector.gui.utils.dialogs.UtilsDialogs;
import pl.wicia.projector.gui.windows.menu.WindowMenu;
import pl.wicia.projector.common.exceptions.ExceptionDuplicateEntity;

/**
 *
 * @author Michał 'Wicia' Wietecha
 */
public class WindowAddPattern extends javax.swing.JFrame {

    /**
     * Creates new form WindowAddWorkshop
     */
    public WindowAddPattern() {
        this.initComponents();
        this.initDialogs();
    }
    
    private void initDialogs(){
        this.dialogs = new UtilsDialogs(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        fieldPatternName = new javax.swing.JTextField();
        buttonAddPattern = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaNecessary = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        buttonBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 102, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dodawanie wzorca", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 14), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(0, 0, 0));

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Nazwa wzorca");

        buttonAddPattern.setBackground(new java.awt.Color(255, 102, 0));
        buttonAddPattern.setText("Dodaj");
        buttonAddPattern.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddPatternActionPerformed(evt);
            }
        });

        areaNecessary.setColumns(20);
        areaNecessary.setRows(5);
        jScrollPane1.setViewportView(areaNecessary);

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Potrzebne");

        buttonBack.setBackground(new java.awt.Color(255, 102, 0));
        buttonBack.setText("Menu");
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fieldPatternName)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(buttonBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonAddPattern))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldPatternName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAddPattern)
                    .addComponent(buttonBack)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAddPatternActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddPatternActionPerformed
        String patternName = this.fieldPatternName.getText();
        String necessary = this.areaNecessary.getText();
        if(!patternName.isEmpty()){
            this.onAddingPattern(patternName, necessary);
        }
        else{
            dialogs.show(new DialogError("Brak danych!", "Nazwa wzorca elementu jest pusta."));
        }
    }//GEN-LAST:event_buttonAddPatternActionPerformed

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        WindowMenu.open();
        this.dispose();
    }//GEN-LAST:event_buttonBackActionPerformed

    private void onAddingPattern(String patternName, String necessary){
        ElementPatternEntity entity = new ElementPatternEntity(patternName, necessary);
        try {
            // TODO Gdzie to ma być inicjalizowane i zapisywane?
            ElementPatternService bean = ElementPatternService.getService();
            bean.addPattern(entity);
            dialogs.show(new DialogInfo("Sukces!", "Wzorzec elementu dodano do bazy danych.")); 
        } 
        catch (ExceptionDuplicateEntity ex){
            // TODO: gdzie umieszczać stringi?
            dialogs.show(new DialogError("Duplikat!", "Podany wzorzec już istnieje w bazie"));
        }
        catch(Exception ex){
            dialogs.show(new DialogError("Błąd!", ex.getMessage()));
        }
    }
    
    //TODO: Jak to profesjonalnie zorganizować + refactroring innych metod tego typu
    public static void open(){
        EventQueue.invokeLater(() -> {
            WindowAddPattern window = new WindowAddPattern();
            window.setVisible(true);
            window.setLocationRelativeTo(null);
        });
    }

    private UtilsDialogs dialogs;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaNecessary;
    private javax.swing.JButton buttonAddPattern;
    private javax.swing.JButton buttonBack;
    private javax.swing.JTextField fieldPatternName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}