/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pl.wicia.projector.gui.windows.common.list;

import java.awt.EventQueue;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import pl.wicia.projector.database.entities.workshop.WorkshopEntity;
import pl.wicia.projector.database.services.workshop.WorkshopService;
import pl.wicia.projector.gui.utils.dialogs.types.DialogError;
import pl.wicia.projector.gui.utils.dialogs.types.DialogQuestion;
import pl.wicia.projector.gui.utils.dialogs.UtilsDialogs;
import pl.wicia.projector.spring.contexts.ContextSettings;
import pl.wicia.projector.common.settings.AppSettings;
import pl.wicia.projector.common.settings.AppSettings.PropertyName;
import pl.wicia.projector.gui.windows.common.tables.DynamicTableModel;
import pl.wicia.projector.gui.windows.menu.WindowMenu;

/**
 *
 * @author Michał 'Wicia' Wietecha
 */
public class WindowChooseList extends javax.swing.JFrame {

    /**
     * Creates new form WindowAddWorkshop
     */
    public WindowChooseList(Class elementType) {
        this.initComponents();
        this.initDialogs();
        this.setElementType(elementType);
        this.onTableLoad();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableData = new javax.swing.JTable();
        buttonSearch = new javax.swing.JButton();
        fieldSearch = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 102, 0));

        tableData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableData);

        buttonSearch.setBackground(new java.awt.Color(255, 102, 0));
        buttonSearch.setText("Szukaj");
        buttonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(fieldSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonSearch)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSearch)
                    .addComponent(fieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initDialogs() {
        this.dialogs = new UtilsDialogs(this);
    }

    private void tableDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDataMouseClicked
        int selectedRow = this.tableData.getSelectedRow();
        if (elementType == WorkshopEntity.class) {
            long workshopID = Long.valueOf(this.tableData.getValueAt(selectedRow, 0).toString());
            String workshopName = this.tableModel.getValueAt(selectedRow, 1).toString();
            int decision = dialogs.show(new DialogQuestion("Pytanie",
                    "Czy chcesz wybrać warsztat " + workshopName + "?", "Tak", "Anuluj"));
            if (decision == 0) {
                AppSettings s = ContextSettings.getAppSettings();
                s.addProperty(PropertyName.WorkshopName, workshopName);
                s.addProperty(PropertyName.WorkshopID, workshopID);
                WindowMenu.open();
                this.dispose();
            }
        } 
        else {
            
        }
    }//GEN-LAST:event_tableDataMouseClicked

    private void buttonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchActionPerformed
        String searchValue = this.fieldSearch.getText();
        if(searchValue.isEmpty())
            return;
        if(this.elementType == WorkshopEntity.class){
            WorkshopService service = WorkshopService.getService();
            Collection<WorkshopEntity> list = service.searchWorkshopByName(searchValue);
            if(list == null || list.isEmpty()){
                this.dialogs.show(new DialogError("Brak danych.", 
                        "Podany warsztat nie istnieje"));
            }
            else{
                this.fillTable(list);
            }
        }
    }//GEN-LAST:event_buttonSearchActionPerformed

    private void onTableLoad() {
        // Init model
        int[] columnsWidth = new int[]{10, 90};
        String[] colNames = new String[]{"ID", "Nazwa"};
        this.tableModel = DynamicTableModel.loadModel(tableData, columnsWidth, 
                colNames);

        // Getting data
        try {
            WorkshopService service = WorkshopService.getService();
            List<WorkshopEntity> allWorkshops = service.getAllWorkshops();
            this.fillTable(allWorkshops);
        } 
        catch (Exception ex) {
            dialogs.show(new DialogError("Błąd!", ex.getMessage()));
        }
    }

    private void fillTable(Collection<WorkshopEntity> allWorkshops) {
        this.tableModel.setRowsCount(allWorkshops.size());
        int rowIndex = 0;
        for (WorkshopEntity entity : allWorkshops) {
            Object[] values = new Object[]{entity.getId(), entity.getName()};
            this.tableModel.setNewRow(values, rowIndex);
            rowIndex++;
        }
    }

    public static void open(Class type) {
        EventQueue.invokeLater(() -> {
            WindowChooseList window = new WindowChooseList(type);
            window.setVisible(true);
            window.setLocationRelativeTo(null);
        });
    }

    private void setElementType(Class elementType) {
        this.elementType = elementType;
    }

    private UtilsDialogs dialogs;
    private DynamicTableModel tableModel;
    private Class elementType;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonSearch;
    private javax.swing.JTextField fieldSearch;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableData;
    // End of variables declaration//GEN-END:variables
}
